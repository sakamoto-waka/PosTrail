- posts.each do |post|
  // ユーザーが退会していないかチェック
  - if post.user.active_for_authentication?
    .card.post-card.mb-5
      .card-header
        .row.justify-content-between.px-3
          .inline-block
            - if admin_signed_in?
              = link_to admin_user_path(post.user) do
                = image_tag post.user.get_account_image(50, 50), class: "mr-2"
                = link_to post.user.name, user_path(post.user)
            - else
              = link_to user_path(post.user) do
                = image_tag post.user.get_account_image(50, 50), class: "mr-2"
                = link_to post.user.name, user_path(post.user)
          .inline-block.my-auto
            = link_to "クラブ名：#{post.trail_place}", posts_path(trail_place: post.trail_place) if post.trail_place.present?
      - if admin_signed_in?
        = link_to admin_post_path(post) do
          = image_tag post.trail_image, class: "card-img-top p-3" if post.trail_image.attached?
          .card-body
            // 投稿内容の表示を改行ありにする
            = simple_format(post.body)
            .small.text-muted.text-right
              %i.fas.fa-history
              = "#{time_ago_in_words(post.created_at)}前"
      - else    
        = link_to post_path(post) do
          = image_tag post.trail_image, class: "card-img-top p-3" if post.trail_image.attached?

        .card-body
          // 投稿内容の表示を改行ありにする
          = simple_format(post.body)
          .small.text-muted.text-right
            %i.fas.fa-history
            = "#{time_ago_in_words(post.created_at)}前"
      .card-footer
        %i.fas.fa-tag
        - post.tags.each do |tag|
          = admin_signed_in? ? (link_to tag.name.truncate(10), admin_posts_path(tag_id: tag.id)) : (link_to tag.name.truncate(10), posts_path(tag_id: tag.id))

        .flex
          .row.justify-content-between.px-3
            %span
              = render 'public/likes/like_btn', post: post
              = link_to post_path(post) do
                %i.far.fa-comment-dots
                = post.comments.count
            %span
              = link_to '詳細', post_path(post)
              - if user_signed_in? && post.user.id == current_user.id
                = link_to '編集', edit_post_path(post)
                = link_to '削除', post_path(post), method: :delete, data: { confirm: "本当に削除しますか？"}
