- posts.each do |post|
  %div
    // ユーザーが退会していないかチェック
    - if post.user.active_for_authentication?
      .card.post-card.mb-3
        .card-header
          .row.justify-content-between.px-3
            .inline-block
              = link_to user_path(post.user) do
                = image_tag post.user.get_account_image(50, 50), class: "mr-2"
                = link_to post.user.name, user_path(post.user)
            .inline-block.my-auto
              - if post.trail_place.present?
                %span クラブ名：
                = link_to post.trail_place, posts_path(trail_place: post.trail_place)

        = link_to post_path(post) do
          - if post.trail_image.attached?
            = image_tag post.trail_image, class: "card-img-top p-3"

          .card-body
            = link_to post_path(post) do
              // 投稿内容の表示を改行ありにする
              = simple_format(post.body)
        .card-footer
          %i.fas.fa-tag
          - post.tags.each do |tag|
            = link_to tag.name.truncate(10), posts_path(tag_id: tag.id)
          // .inline-block

          .flex
            .row.justify-content-between.px-3
              %span
                = render 'public/likes/like_btn', post: post
                // コメント用アイコン
                = link_to post_path(post) do
                  %i.far.fa-comment-dots
                  = post.comments.count
              %span
                // admin用のルーティングと分岐
                = link_to '詳細', post_path(post) unless admin_signed_in?
  
                - if admin_signed_in?
                  = link_to '削除', admin_post_path(post), method: :delete, data: { confirm: "本当に削除しますか？"}
                  = link_to '詳細', admin_post_path(post)
                - elsif user_signed_in? && post.user.id == current_user.id
                  = link_to '編集', edit_post_path(post)
                  = link_to '削除', post_path(post), method: :delete, data: { confirm: "本当に削除しますか？"}
