.row
  .card-group
    - posts.each do |post|
      .mb-5.col-lg-6
        // ユーザーが退会していないかチェック
        - if post.user.active_for_authentication?
          .card.post-card.h-auto
            .card-header
              .row.justify-content-between.px-3
                .inline-block
                  = link_to admin_user_path(post.user) do
                    = image_tag post.user.get_account_image(50, 50), class: "mr-2"
                    = link_to post.user.name, user_path(post.user)
                .inline-block.my-auto
                  %span.prefecture-text
                    = link_to post.prefecture.name, admin_posts_path(prefecture_id: post.prefecture_id)
                  = link_to "#{post.trail_place}", admin_posts_path(trail_place: post.trail_place) if post.trail_place.present?
            // 本文全体にadmin_post_pathへのリンクを貼る
            = link_to admin_post_path(post) do
              = image_tag post.trail_image, class: "card-img-top p-3" if post.trail_image.attached?

              .card-body
                // 投稿内容の表示を改行ありにする
                = simple_format(post.body)
                .small.text-muted.text-right
                  %i.fas.fa-history
                  = "#{time_ago_in_words(post.created_at)}前"
            .card-footer
              %i.fas.fa-tag
              - post.tags.each do |tag|
                = link_to tag.name.truncate(10), admin_posts_path(tag_id: tag.id)
              .flex
                .row.justify-content-between.px-3
                  %span
                    = render 'public/likes/like_btn', post: post
                    // コメント
                    = link_to admin_post_path(post) do
                      %i.far.fa-comment-dots
                      = post.comments.count
                  %span
                    = link_to '削除', admin_post_path(post), method: :delete, data: { confirm: "本当に削除しますか？"}
